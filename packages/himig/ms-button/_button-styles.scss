// @license
// Copyright (c) 2025 MatteuSan
// SPDX-License-Identifier: MIT

@use 'pkg:@matteusan/pintig';
@use 'sass:list';
@use 'button-base' as base;
@use 'button-theme' as theme;
@use 'button-mixins' as style;

$_states: ('error');

@mixin render(
  $color: (),
  $struct: (),
  $typography: (),
  $settings: ()
) {
  $color: pintig.theme-merge(theme.$init-color, $color);
  $struct: pintig.theme-merge(theme.$init-struct, $struct);
  $typography: pintig.theme-merge(theme.$init-typography, $typography);
  $settings: pintig.theme-merge(theme.$init-settings, $settings);

  $fills: (
    default: pintig.theme-get($color, 'fill'),
    hover: pintig.theme-get($color, 'fill', 'hover'),
    focus: pintig.theme-get($color, 'fill', 'focus'),
    active: pintig.theme-get($color, 'fill', 'active'),
    disabled: pintig.theme-get($color, 'fill', 'disabled'),
  );

  $inks: (
    default: pintig.theme-get($color, 'ink'),
    hover: pintig.theme-get($color, 'ink', 'hover'),
    focus: pintig.theme-get($color, 'ink', 'focus'),
    active: pintig.theme-get($color, 'ink', 'active'),
    disabled: pintig.theme-get($color, 'ink', 'disabled'),
  );

  $borders: (
    default: pintig.theme-get($color, 'border'),
    hover: pintig.theme-get($color, 'border', 'hover'),
    focus: pintig.theme-get($color, 'border', 'focus'),
    active: pintig.theme-get($color, 'border', 'active'),
    disabled: pintig.theme-get($color, 'border', 'disabled'),
  );

  @layer components {
    @include base.init() {
      @include pintig.struct-apply('button', $struct);
      @include pintig.typography-apply('button', $typography);
      @include pintig.color-apply('button', (
        fill: 'ms-black.800',
        ink: 'ms-white.200',
        border: 'ms-black.800',
      ));
      @include style.text(
        $fills: $fills,
        $inks: $inks,
        $borders: $borders,
      );
      outline-offset: 2px;

      &:where(:disabled) {
        cursor: not-allowed;
      }

      &:where(.is-icon-only) {
        @include pintig.struct-bind('button', (
          width: (min: auto),
          padding: list.nth(pintig.theme-get($struct, 'padding'), 1)
        ));

        > .ms-button__label {
          display: none;
        }
      }

      &:where(.is-small) {
        @include pintig.struct-bind('button', (
          padding: ('xs' 'sm'),
        ));
        @include pintig.typography-apply('button', (
          size: 'xs'
        ));
      }

      &:where(.is-large) {
        @include pintig.struct-bind('button', (
          padding: ('md' 'lg'),
          gap: 'sm',
        ));
        @include pintig.typography-apply('button', (
          size: 'md'
        ));
      }

      &:where(.is-fullwidth) {
        @include pintig.struct-bind('button', (
          width: (
            default: 100%,
            max: 100%,
          ),
          height: 100%
        ));
      }

      @each $state in $_states {
        &:where(.is-#{$state}) {
          @include style.text(
            $fills: (
              'default': '#{$state}-400',
              'hover': '#{$state}-300',
              'focus': '#{$state}-400',
              'active': '#{$state}-200',
              'disabled': 'disabled-ink',
            ),
            $inks: (
              'default': '#{$state}-ink',
              'disabled': 'disabled-ink'
            ),
            $borders: (
              'default': '#{$state}-400',
              'hover': '#{$state}-300',
              'focus': '#{$state}-400',
              'active': '#{$state}-200',
              'disabled': 'disabled-ink',
            )
          );
        }
      }

      &:where(.is-fullwidth) {
        @include pintig.struct-width('button', (
          default: 100%,
          min: auto,
          max: 100%
        ), 'bind');
      }

      &:where(.is-outlined) {
        @include style.outlined(
          $fills: $fills,
          $inks: $inks,
          $borders: $borders,
        );

        @each $state in $_states {
          &:where(.is-#{$state}) {
            @include style.outlined(
              $fills: (
                'default': '#{$state}-400',
                'hover': '#{$state}-300',
                'focus': '#{$state}-400',
                'active': '#{$state}-200',
                'disabled': 'disabled-ink',
              ),
              $inks: (
                'default': '#{$state}-ink',
                'disabled': 'disabled-ink'
              ),
              $borders: (
                'default': '#{$state}-400',
                'hover': '#{$state}-300',
                'focus': '#{$state}-400',
                'active': '#{$state}-200',
                'disabled': 'disabled-ink',
              )
            );
          }
        }
      }

      &:where(.is-filled) {
        @include style.filled(
          $fills: $fills,
          $inks: $inks,
          $borders: $borders,
        );

        @each $state in $_states {
          &:where(.is-#{$state}) {
            @include style.filled(
              $fills: (
                'default': '#{$state}-400',
                'hover': '#{$state}-300',
                'focus': '#{$state}-400',
                'active': '#{$state}-200',
                'disabled': 'disabled',
              ),
              $inks: (
                'default': '#{$state}-ink',
                'disabled': 'disabled-ink'
              ),
              $borders: (
                'default': '#{$state}-400',
                'hover': '#{$state}-300',
                'focus': '#{$state}-400',
                'active': '#{$state}-200',
                'disabled': 'disabled',
              )
            );
          }
        }

        &:where(.is-raised) {
          &:not(:disabled) {
            @include pintig.struct-shadow('button', 'xs');

            &:hover,
            &:focus {
              @include pintig.struct-shadow('button', 'xs');
            }

            &:active {
              @include pintig.struct-shadow('button', 'sm');
            }
          }
        }
      }
    }
  }
}