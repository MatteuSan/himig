// @license
// Copyright (c) 2025 MatteuSan
// SPDX-License-Identifier: MIT

@use 'pkg:@matteusan/pintig';
@use 'sass:map';
@use 'sass:string';

@mixin text($fills, $inks, $borders) {
  $fill: map.get($fills, 'default');
  $ink-disabled: map.get($inks, 'disabled');
  $border: map.get($borders, 'default');

  &:not(:disabled) {
    @include pintig.color-bind('button', (
      fill: transparent,
      ink: $fill,
      border: transparent
    ));
    @include pintig.key-bind('button-outline', 2px solid rgb(from _raw($fill) r g b / pintig.$color-fill-default-opacity));

    &:hover {
      @include pintig.color-bind('button', (
        fill: _alpha($fill, pintig.$color-fill-hover-opacity),
        ink: $fill,
        border: _alpha($border, pintig.$color-border-hover-opacity, $type: 'border')
      ));
    }

    &:focus {
      @include pintig.color-bind('button', (
        fill: _alpha($fill, pintig.$color-fill-focus-opacity),
        ink: $fill,
        border: _alpha($border, pintig.$color-border-focus-opacity, $type: 'border')
      ));
      @include pintig.key-bind('button-outline', 2px solid rgb(from _raw($fill) r g b / pintig.$color-outline-focus-opacity));
    }

    &:active {
      @include pintig.color-bind('button', (
        fill: _alpha($fill, pintig.$color-fill-active-opacity),
        ink: $fill,
        border: _alpha($border, pintig.$color-border-active-opacity, $type: 'border')
      ));
    }
  }

  &:disabled {
    @include pintig.color-bind('button', (
      fill: transparent,
      ink: $ink-disabled,
      border: transparent
    ));
  }
}

@mixin outlined($fills, $inks, $borders) {
  $fill: map.get($fills, 'default');
  $fill-hover: map.get($fills, 'hover');
  $fill-focus: map.get($fills, 'focus');
  $fill-active: map.get($fills, 'active');
  $fill-disabled: map.get($fills, 'disabled');
  $ink: map.get($inks, 'default');
  $ink-disabled: map.get($inks, 'disabled');
  $border: map.get($borders, 'default');
  $border-hover: map.get($borders, 'hover');
  $border-focus: map.get($borders, 'focus');
  $border-active: map.get($borders, 'active');
  $border-disabled: map.get($borders, 'disabled');

  &:not(:disabled) {
    @include pintig.color-bind('button', (
      fill: transparent,
      ink: $fill,
      border: $border
    ));
    @include pintig.key-bind('button-outline', 2px solid rgb(from _raw($fill) r g b / pintig.$color-fill-default-opacity));

    &:focus {
      @include pintig.color-bind('button', (
        fill: _alpha($fill, pintig.$color-fill-focus-opacity),
        ink: $fill,
        border: $border
      ));
      @include pintig.key-bind('button-outline', 2px solid rgb(from _raw($fill) r g b / pintig.$color-outline-focus-opacity));
    }

    &:hover {
      @include pintig.color-bind('button', (
        fill: $fill-hover,
        ink: $ink,
        border: $border-hover
      ));
    }

    &:active {
      @include pintig.color-bind('button', (
        fill: $fill-active,
        ink: $ink,
        border: $border-active
      ));
    }
  }

  &:disabled {
    @include pintig.color-bind('button', (
      fill: transparent,
      ink: $ink-disabled,
      border: $border-disabled
    ));
  }
}

@mixin filled($fills, $inks, $borders) {
  $fill: map.get($fills, 'default');
  $fill-hover: map.get($fills, 'hover');
  $fill-focus: map.get($fills, 'focus');
  $fill-active: map.get($fills, 'active');
  $fill-disabled: map.get($fills, 'disabled');
  $ink: map.get($inks, 'default');
  $ink-disabled: map.get($inks, 'disabled');
  $border: map.get($borders, 'default');
  $border-hover: map.get($borders, 'hover');
  $border-focus: map.get($borders, 'focus');
  $border-active: map.get($borders, 'active');
  $border-disabled: map.get($borders, 'disabled');

  &:not(:disabled) {
    @include pintig.color-bind('button', (
      fill: $fill,
      ink: $ink,
      border: $border
    ));
    @include pintig.key-bind('button-outline', 2px solid rgb(from _raw($fill) r g b / pintig.$color-fill-default-opacity));

    &:hover {
      @include pintig.color-bind('button', (
        fill: $fill-hover,
        ink: $ink,
        border: $border-hover
      ));
    }

    &:focus {
      @include pintig.color-bind('button', (
        fill: $fill-focus,
        ink: $ink,
        border: $border-focus
      ));
      @include pintig.key-bind('button-outline', 2px solid rgb(from _raw($fill) r g b / pintig.$color-outline-focus-opacity));
    }

    &:active {
      @include pintig.color-bind('button', (
        fill: $fill-active,
        ink: $ink,
        border: $border-active
      ));
    }
  }

  &:disabled {
    @include pintig.color-bind('button', (
      fill: $fill-disabled,
      ink: $ink-disabled,
      border: $border-disabled
    ));
  }
}

@function _alpha($query, $opacity, $type: 'fill', $state: 'hover') {
  @return rgb(from _raw($query) r g b / $opacity);
}

@function _raw($query) {
  @return pintig.token-switch($query);
}