// @license
// Copyright (c) 2025 MatteuSan
// SPDX-License-Identifier: MIT

$expressive-inks: false !default;
$module-mode: false !default;
$test-mode: $module-mode !default;
$vue-mode: $test-mode !default;

@use 'pkg:@matteusan/pintig' with (
  $expressive-inks: $expressive-inks,
  $module-mode: $module-mode,
  $test-mode: $test-mode,
  $vue-mode: $vue-mode,
);
@use 'sass:map';
@use 'init-font-pack' as font-pack;

// For accessing core lib from the main himig module.
@forward 'pkg:@matteusan/pintig';

@mixin init(
  $theme: (),
  $primary: 'ms-dark-grey',
  $accent: 'ms-orange',
  $surface: 'ms-dark-grey',
  $background: 'ms-dark-grey.800',
  $error: 'ms-red',
  $disabled: (
    'default': rgba(#fff, 12%),
    'ink': rgba(#fff, 34%)
  ),
  $radius: (),
  $global: (),
  $supertitle: (),
  $title: (),
  $subtitle: (),
  $body: (),
  $mono: (),
  $small: (),
  $breakpoints: (),
  $extend: (),
) {
  $primary: pintig.prioritize(map.get($theme, 'primary'), $primary);
  $accent: pintig.prioritize(map.get($theme, 'accent'), $accent);
  $surface: pintig.prioritize(map.get($theme, 'surface'), $surface);
  $background: pintig.prioritize(map.get($theme, 'background'), $background);
  $error: pintig.prioritize(map.get($theme, 'error'), $error);
  $disabled: pintig.prioritize(map.get($theme, 'disabled'), $disabled);
  $radius: pintig.prioritize(map.get($theme, 'radius'), $radius);
  $global: pintig.prioritize(map.get($theme, 'global'), $global);
  $supertitle: pintig.prioritize(map.get($theme, 'supertitle'), $supertitle);
  $title: pintig.prioritize(map.get($theme, 'title'), $title);
  $subtitle: pintig.prioritize(map.get($theme, 'subtitle'), $subtitle);
  $body: pintig.prioritize(map.get($theme, 'body'), $body);
  $mono: pintig.prioritize(map.get($theme, 'mono'), $mono);
  $small: pintig.prioritize(map.get($theme, 'small'), $small);
  $breakpoints: pintig.prioritize(map.get($theme, 'breakpoints'), $breakpoints);
  $extend: pintig.prioritize(map.get($theme, 'extend'), $extend);

  $_init-type-global: (
    'family': 'family.sans-serif',
    'size': 'size.sm',
    'weight': 'weight.normal',
    'line-height': 'line-height.normal',
    'squeeze': 'squeeze.normal',
  );

  $_init-type-supertitle: (
    'family': 'family.serif',
    'size': 'size.3xl',
    'weight': 'weight.normal',
    'line-height': 'line-height.short',
    'squeeze': 'squeeze.tight',
  );

  $_init-type-title: (
    'family': 'family.serif',
    'size': 'size.xl',
    'weight': 'weight.normal',
    'line-height': 'line-height.short',
    'squeeze': 'squeeze.tight',
  );

  $_init-type-subtitle: (
    'family': 'family.sans-serif',
    'size': 'size.md',
    'weight': 'weight.light',
    'line-height': 'line-height.normal',
    'squeeze': 'squeeze.normal',
  );

  $_init-type-body: (
    'family': 'family.sans-serif',
    'size': 'size.sm',
    'weight': 'weight.normal',
    'line-height': 'line-height.normal',
    'squeeze': 'squeeze.normal',
  );

  $_init-type-mono: (
    'family': 'family.mono',
    'size': 'size.sm',
    'weight': 'weight.normal',
    'line-height': 'line-height.normal',
    'squeeze': 'squeeze.normal',
  );

  $_init-type-small: (
    'family': 'family.sans-serif',
    'size': 'size.xs',
    'weight': 'weight.light',
    'line-height': 'line-height.tall',
    'squeeze': 'squeeze.normal',
  );

  $_init-breakpoints: (
    'small': pintig.primitive-token-get('breakpoint.sm'),
    'medium': pintig.primitive-token-get('breakpoint.md'),
    'large': pintig.primitive-token-get('breakpoint.lg'),
    'xlarge': pintig.primitive-token-get('breakpoint.xl'),
  );

  :root {
    @include pintig.theme-config(
      $primary: $primary,
      $accent: $accent,
      $surface: $surface,
      $background: $background,
      $error: $error,
      $disabled: $disabled,
      $radius: $radius,
      $breakpoints: $breakpoints,
      $global: map.merge($_init-type-global, $global),
      $supertitle: map.merge($_init-type-supertitle, $supertitle),
      $title: map.merge($_init-type-title, $title),
      $subtitle: map.merge($_init-type-subtitle, $subtitle),
      $body: map.merge($_init-type-body, $body),
      $mono: map.merge($_init-type-mono, $mono),
      $small: map.merge($_init-type-small, $small),
      $extend: $extend,
    );

    // Immutables
    --ms-shadow-color: rgba(0, 0, 0, 0.25);
    --ms-sprite-size: 32px;
    --ms-transition-time: 0.4s;

    font-family: pintig.token-get('family-global');
    line-height: pintig.token-get('line-height-global');
  }

  @include pintig.breakpoint-config(map.merge($_init-breakpoints, $breakpoints));

  @include font-pack.load((
    'global': map.get(map.merge($_init-type-global, $global), 'family'),
    'supertitle': map.get(map.merge($_init-type-supertitle, $supertitle), 'family'),
    'title': map.get(map.merge($_init-type-title, $title), 'family'),
    'subtitle': map.get(map.merge($_init-type-subtitle, $subtitle), 'family'),
    'body': map.get(map.merge($_init-type-body, $body), 'family'),
    'mono': map.get(map.merge($_init-type-mono, $mono), 'family'),
    'small': map.get(map.merge($_init-type-small, $small), 'family'),
  ));

  *,
  :before,
  :after {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
    color: inherit;
  }

  html {
    box-sizing: border-box;
    font-size: 100%;
  }

  body {
    background: pintig.key-create('body-fill', pintig.token-get('background'));
    color: pintig.key-create('body-ink', pintig.token-get('background-ink'));
  }

  a {
    text-decoration: none;
    color: inherit;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p,
  span,
  a {
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
    line-height: inherit;
  }

  main.content-wrap {
    $margin: 15px;
    width: calc(100% - #{$margin * 2});
    max-width: pintig.key-create('content-wrap-max-width', pintig.primitive-token-get('dimension.xl'));
    height: 100%;
    display: pintig.key-create('content-wrap-display', flex);
    flex-flow: column nowrap;
    gap: pintig.key-create('content-wrap-gap', pintig.primitive-token-get('spacing.md'));
    margin: 0 auto;
    padding:
      pintig.key-create('content-wrap-padding-y', pintig.primitive-token-get('spacing.lg'))
      pintig.key-create('content-wrap-padding-x', pintig.primitive-token-get('spacing.none'));

    // If grid
    grid-template-columns: repeat(pintig.key-create('content-wrap-cols', 4), 1fr);

    @include pintig.breakpoint-create('medium') {
      @include pintig.key-bind('content-wrap-cols', repeat(8, 1fr));
    }

    @include pintig.breakpoint-create('large') {
      @include pintig.key-bind('content-wrap-cols', repeat(12, 1fr));
    }
  }

  @content;
}