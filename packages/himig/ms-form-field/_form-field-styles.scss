// @license
// Copyright (c) 2025 MatteuSan
// SPDX-License-Identifier: MIT

@use 'pkg:@matteusan/pintig';
@use 'sass:list';
@use 'form-field-base' as base;
@use 'form-field-theme' as theme;

@mixin render(
  $color: (),
  $struct: (),
  $typography: (),
  $settings: ()
) {
  $color: pintig.theme-merge(theme.$init-color, $color);
  $struct: pintig.theme-merge(theme.$init-struct, $struct);
  $typography: pintig.theme-merge(theme.$init-typography, $typography);
  $settings: pintig.theme-merge(theme.$init-settings, $settings);

  $resolve-padding: if(list.length(pintig.theme-get($struct, 'padding')) >= 2, list.nth(pintig.theme-get($struct, 'padding'), 2), list.nth(pintig.theme-get($struct, 'padding'), 1));

  @layer components {
    @include base.init(
      pintig.primitive-token-switch('padding.#{$resolve-padding}', $resolve-padding),
      pintig.primitive-token-switch('padding.#{$resolve-padding}', $resolve-padding),
      pintig.primitive-token-switch('padding.#{list.nth(pintig.theme-get($struct, 'padding'), 1)}', list.nth(pintig.theme-get($struct, 'padding'), 1)),
    ) {
      .ms-form-field__label {
        @include pintig.color-bind('form-field-label', (
          ink: pintig.theme-get($color, 'ink', 'default'),
        ));
        @include pintig.typography-bind('form-field-label', (
          family: pintig.theme-get($typography, 'family'),
          size: pintig.theme-get($typography, 'size', 'label'),
          weight: pintig.theme-get($typography, 'weight'),
          line-height: pintig.theme-get($typography, 'height'),
        ));
        user-select: none;

        &:has(+ .ms-form-field__input:disabled) {
          @include pintig.color-bind('form-field-label', (
            ink: pintig.theme-get($color, 'ink', 'disabled'),
          ));
        }
      }

      &:has(.ms-form-field__input:read-only:disabled) {
        @include pintig.color-ink('form-field-helper', pintig.theme-get($color, 'ink', 'disabled'), 'bind');
      }

      .ms-form-field__input {
        @include pintig.struct-bind('form-field', (
          width: (
            default: pintig.theme-get($struct, 'width'),
            min: pintig.theme-get($struct, 'width', 'min'),
            max: pintig.theme-get($struct, 'width', 'max')
          ),
          padding: pintig.theme-get($struct, 'padding'),
          radius: pintig.theme-get($struct, 'radius'),
          border-width: pintig.theme-get($struct, 'border-width'),
          border-style: pintig.theme-get($struct, 'border-style'),
          gap: pintig.theme-get($struct, 'gap'),
        ));
        @include pintig.typography-bind('form-field', (
          family: pintig.theme-get($typography, 'family'),
          size: pintig.theme-get($typography, 'size', 'default'),
          weight: pintig.theme-get($typography, 'weight'),
          line-height: pintig.theme-get($typography, 'height'),
        ));

        &:not(:read-only),
        &:not(:disabled) {
          @include pintig.color-bind('form-field', (
            fill: rgb(from pintig.token-switch(pintig.theme-get($color, 'fill')) r g b / pintig.$color-fill-focus-opacity),
            ink: pintig.theme-get($color, 'ink'),
            border: pintig.theme-get($color, 'border'),
          ));

          &:focus {
            @include pintig.color-bind('form-field', (
              fill: rgb(from pintig.token-switch(pintig.theme-get($color, 'fill', 'focus')) r g b / pintig.$color-fill-focus-opacity),
              border: pintig.theme-get($color, 'border', 'focus'),
            ));
            @include pintig.struct-bind('form-field', (
              border-width: pintig.theme-get($struct, 'border-width', 'focus'),
            ));
          }
        }

        &:read-only,
        &:disabled {
          @include pintig.color-bind('form-field', (
            fill: pintig.theme-get($color, 'fill', 'disabled'),
            ink: pintig.theme-get($color, 'ink', 'disabled'),
            border: pintig.theme-get($color, 'fill', 'disabled'),
          ));
          cursor: not-allowed;
        }
      }

      .ms-form-field__helper {
        padding: 0.3rem pintig.primitive-token-switch('padding.#{$resolve-padding}', $resolve-padding) 0;
        @include pintig.color-bind('form-field-helper', (
          ink: pintig.theme-get($color, 'ink', 'helper'),
        ));
        @include pintig.typography-bind('form-field-helper', (
          family: pintig.theme-get($typography, 'family'),
          size: pintig.theme-get($typography, 'size', 'helper'),
          weight: pintig.theme-get($typography, 'weight'),
          line-height: pintig.theme-get($typography, 'height'),
        ));
      }

      &:where(.is-error) {
        &:has(.ms-form-field__input:not(:read-only):not(:disabled)) {
          .ms-form-field__label {
            @include pintig.color-bind('form-field-label', (
              ink: rgb(from pintig.token-switch(pintig.theme-get($color, 'ink', 'error')) r g b / 70%),
            ));
          }
        }

        .ms-form-field__input:not(:disabled),
        .ms-form-field__input:not(:read-only) {
          @include pintig.color-bind('form-field', (
            fill: rgb(from pintig.token-switch(pintig.theme-get($color, 'fill', 'error')) r g b / pintig.$color-fill-focus-opacity),
            ink: pintig.theme-get($color, 'ink', 'error'),
            border: pintig.theme-get($color, 'border', 'error'),
          ));

          &:focus {
            @include pintig.color-bind('form-field', (
              fill: rgb(from pintig.token-switch(pintig.theme-get($color, 'fill', 'error', 'focus')) r g b / pintig.$color-fill-focus-opacity),
              border: pintig.theme-get($color, 'border', 'error', 'focus'),
            ));
          }
        }

        .ms-form-field__helper {
          @include pintig.color-bind('form-field-helper', (
            ink: pintig.theme-get($color, 'ink', 'error'),
          ));
        }
      }

      &:where(.is-raised) {
        @include pintig.struct-bind('form-field', (
          shadow: 'xs',
        ));
      }
    }
  }
}