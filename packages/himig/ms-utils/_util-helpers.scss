//---------------------------------------------------
//  Copyright (c) 2024 MatteuSan
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
//---------------------------------------------------

@use 'pkg:@matteusan/pintig';
@use 'sass:list';

@function handle-include-exclude($default-utils, $include: (), $exclude: ()) {
  $resolved-utils: $default-utils;

  @if not pintig.is-empty($include) and not pintig.is-empty($exclude) {
    @error 'Cannot use $include and $exclude at the same time. Please only use one or the other.';
  }

  @if not pintig.is-empty($include) {
    @each $included in $include {
      @if not list.index($default-utils, $included) {
        @error 'Invalid utility key: #{$included}. Expecting a valid util key: #{$default-utils}.';
      }
    }
    $resolved-utils: $include;
    @return $resolved-utils;
  }

  @if not pintig.is-empty($exclude) {
    @each $excluded in $exclude {
      @if not list.index($default-utils, $excluded) {
        @error 'Invalid utility key: #{$excluded}. Expecting a valid util key: #{$default-utils}.';
      }
      $resolved-utils: list.set-nth($resolved-utils, list.index($resolved-utils, $excluded), null);
      @return $resolved-utils;
    }
  }

  @return $resolved-utils;
}