// @license
// Copyright (c) 2025 MatteuSan
// SPDX-License-Identifier: MIT

@use 'pkg:@matteusan/pintig';
@use 'sass:map';
@use 'sass:meta';
@use 'sass:list';
@use 'sass:string';
@use 'consts';
@use 'util-helpers' as helpers;

$_breakpoints: consts.$breakpoints;
$_presets: (
  'supertitle': (
    family: 'supertitle',
    size: 'supertitle',
    weight: 'supertitle',
    line-height: 'supertitle',
    squeeze: 'supertitle'
  ),
  'title': (
    family: 'title',
    size: 'title',
    weight: 'title',
    line-height: 'title',
    squeeze: 'title'
  ),
  'subtitle': (
    family: 'subtitle',
    size: 'subtitle',
    weight: 'subtitle',
    line-height: 'subtitle',
    squeeze: 'subtitle'
  ),
  'body': (
    family: 'body',
    size: 'body',
    weight: 'body',
    line-height: 'body',
    squeeze: 'body'
  ),
  'mono': (
    family: 'mono',
    size: 'mono',
    weight: 'mono',
    line-height: 'mono',
    squeeze: 'mono'
  ),
  'small': (
    family: 'small',
    size: 'small',
    weight: 'small',
    line-height: 'small',
    squeeze: 'small'
  )
);
$_sizes: ('xs', 'sm', 'md', 'lg', 'xl', '2xl', '3xl', '4xl', '5xl', '6xl');
$_weights: ('black', 'bold', 'normal', 'light');
$_line-heights: ('broad', 'normal', 'condensed', 'tall', 'short');
$_alignments: ('center', 'left', 'right', 'justify', 'justify-all');
$_squeezes: ('tight', 'normal', 'loose');

@mixin typography($include: (), $exclude: ()) {
  $utils-to-render: helpers.handle-include-exclude((
    'preset',
    'family',
    'size',
    'weight',
    'line-height',
    'alignment',
    'squeeze'
  ), $include, $exclude);

  @layer utils {
    @if list.index($utils-to-render, 'preset') {
      @each $preset, $values in $_presets {
        .#{$preset} {
          font-family: pintig.token-get('family-#{map.get($values, 'family')}');
          font-size: pintig.token-get('size-#{map.get($values, 'size')}');
          font-weight: pintig.token-switch('weight-#{map.get($values, 'weight')}', pintig.primitive-token-switch('weight.#{map.get($values, 'weight')}', $values));
          line-height: pintig.token-switch('line-height-#{map.get($values, 'weight')}', pintig.primitive-token-switch('line-height.#{map.get($values, 'line-height')}', $values));
          letter-spacing: pintig.token-switch('squeeze-#{map.get($values, 'squeeze')}', pintig.primitive-token-switch('squeeze.#{map.get($values, 'squeeze')}', $values));
        }

        @each $breakpoint in $_breakpoints {
          .\@#{$breakpoint}\:#{$preset} {
            @include pintig.breakpoint-create($breakpoint) {
              font-family: pintig.token-get('family-#{map.get($values, 'family')}') !important;
              font-size: pintig.token-get('size-#{map.get($values, 'size')}') !important;
              font-weight: pintig.token-switch('weight-#{map.get($values, 'weight')}', pintig.primitive-token-switch('weight.#{map.get($values, 'weight')}', $values));
              line-height: pintig.token-switch('line-height-#{map.get($values, 'weight')}', pintig.primitive-token-switch('line-height.#{map.get($values, 'line-height')}', $values));
              letter-spacing: pintig.token-switch('squeeze-#{map.get($values, 'squeeze')}', pintig.primitive-token-switch('squeeze.#{map.get($values, 'squeeze')}', $values));
            }
          }
        }
      }
    }

    @if list.index($utils-to-render, 'family') {
      @each $preset, $values in $_presets {
        .family-#{$preset} {
          font-family: pintig.token-get('family-#{$preset}');
        }

        @each $breakpoint in $_breakpoints {
          .\@#{$breakpoint}\:family-#{$preset} {
            @include pintig.breakpoint-create($breakpoint) {
              font-family: pintig.token-get('family-#{$preset}') !important;
            }
          }
        }
      }
    }

    @if list.index($utils-to-render, 'size') {
      @each $size in $_sizes {
        .size-#{$size} {
          font-size: pintig.primitive-token-get('size.#{$size}');
        }

        @each $breakpoint in $_breakpoints {
          .\@#{$breakpoint}\:size-#{$size} {
            @include pintig.breakpoint-create($breakpoint) {
              font-size: pintig.primitive-token-get('size.#{$size}') !important;
            }
          }
        }
      }
    }

    @if list.index($utils-to-render, 'weight') {
      @each $weight in $_weights {
        .weight-#{$weight} {
          font-weight: pintig.primitive-token-get('weight.#{$weight}');
        }

        @each $breakpoint in $_breakpoints {
          .\@#{$breakpoint}\:weight-#{$weight} {
            @include pintig.breakpoint-create($breakpoint) {
              font-weight: pintig.primitive-token-get('weight.#{$weight}') !important;
            }
          }
        }
      }
    }

    @if list.index($utils-to-render, 'line-height') {
      @each $line-height in $_line-heights {
        .line-height-#{$line-height} {
          line-height: pintig.primitive-token-get('line-height.#{$line-height}');
        }

        @each $breakpoint in $_breakpoints {
          .\@#{$breakpoint}\:line-height-#{$line-height} {
            @include pintig.breakpoint-create($breakpoint) {
              line-height: pintig.primitive-token-get('line-height.#{$line-height}') !important;
            }
          }
        }
      }
    }

    @if list.index($utils-to-render, 'alignment') {
      @each $alignment in $_alignments {
        .align-#{$alignment} {
          text-align: string.unquote($alignment);
        }

        @each $breakpoint in $_breakpoints {
          .\@#{$breakpoint}\:align-#{$alignment} {
            @include pintig.breakpoint-create($breakpoint) {
              text-align: string.unquote($alignment) !important;
            }
          }
        }
      }
    }

    @if list.index($utils-to-render, 'squeeze') {
      @each $squeeze in $_squeezes {
        .squeeze-#{$squeeze} {
          letter-spacing: pintig.primitive-token-get('squeeze.#{$squeeze}');
        }

        @each $breakpoint in $_breakpoints {
          .\@#{$breakpoint}\:squeeze-#{$squeeze} {
            @include pintig.breakpoint-create($breakpoint) {
              letter-spacing: pintig.primitive-token-get('squeeze.#{$squeeze}') !important;
            }
          }
        }
      }
    }
  }
}