// @license
// Copyright (c) 2024 MatteuSan
// SPDX-License-Identifier: MIT

@use '@matteusan/sentro';
@use '../tokens';
@use '../tools';
@use 'sass:map';
@use 'theme-tokens' as token;

$expressive-inks: false !default;

@mixin theme-config(
  $primary: (),
  $accent: (),
  $surface: (),
  $background: (),
  $error: (),
  $warning: (),
  $success: (),
  $disabled: (),
  $radius: (),
  $breakpoints: (),
  $global: (),
  $supertitle: (),
  $title: (),
  $subtitle: (),
  $body: (),
  $mono: (),
  $small: (),
  $extend: ()
) {

  $_init-radius: (
    'small': 'radius.sm',
    'medium': 'radius.md',
    'large': 'radius.lg',
  );

  $_init-breakpoints: (
    'small': 'breakpoint.sm',
    'medium': 'breakpoint.md',
    'large': 'breakpoint.lg',
    'xlarge': 'breakpoint.xl',
  );

  $_typography-mapper: (
    'global': $global,
    'supertitle': $supertitle,
    'title': $title,
    'subtitle': $subtitle,
    'body': $body,
    'mono': $mono,
    'small': $small,
  );

  @include token.config($map: $extend);
  @include token.config(
    $primary: _color-theme-token-module($primary),
    $accent: _color-theme-token-module($accent),
    $surface: _color-theme-token-module($surface),
    $primary-alpha: _alpha-color-theme-token-module($primary),
    $accent-alpha: _alpha-color-theme-token-module($accent),
    $surface-alpha: _alpha-color-theme-token-module($surface),
    $background: tokens.primitive-token-switch($background),
    $background-ink: tools.get-ink(tokens.primitive-token-switch($background)),
    $error: _color-theme-token-module($error),
    $error-alpha: _alpha-color-theme-token-module($error),
    $disabled: (
      'default': map.get($disabled, 'default'),
      'ink': tools.prioritize(map.get($disabled, 'ink'), tools.get-ink(map.get($disabled, 'default'), $expressive-inks)),
    ),
    $radius: _shape-theme-token-module(map.merge($_init-radius, $radius)),
    $family: _typography-theme-token-module($_typography-mapper, 'family'),
    $size: _typography-theme-token-module($_typography-mapper, 'size'),
    $weight: _typography-theme-token-module($_typography-mapper, 'weight'),
    $line-height: _typography-theme-token-module($_typography-mapper, 'line-height'),
  );

  @include sentro.breakpoint-config(
    _shape-theme-token-module(map.merge($_init-breakpoints, $breakpoints))
  );
}

/// @access private
@function _color-theme-token-module($query) {
  @if tools.is-type($query, 'map', $errors: false) {
    @return (
      200: tokens.primitive-token-switch('#{map.get($query, 200)}.200', map.get($query, 200)),
      300: tokens.primitive-token-switch('#{map.get($query, 300)}.300', map.get($query, 300)),
      400: tokens.primitive-token-switch('#{map.get($query, 400)}.400', map.get($query, 400)),
      600: tokens.primitive-token-switch('#{map.get($query, 600)}.600', map.get($query, 600)),
      800: tokens.primitive-token-switch('#{map.get($query, 800)}.800', map.get($query, 800)),
      'ink': tools.get-ink(tokens.primitive-token-switch('#{map.get($query, 400)}.400', map.get($query, 400)), $expressive-inks)
    );
  }

  @return (
    200: tokens.primitive-token-get('#{$query}.200'),
    300: tokens.primitive-token-get('#{$query}.300'),
    400: tokens.primitive-token-get('#{$query}.400'),
    600: tokens.primitive-token-get('#{$query}.600'),
    800: tokens.primitive-token-get('#{$query}.800'),
    'ink': tools.get-ink(tokens.primitive-token-get('#{$query}.400'), $expressive-inks)
  );
}

/// @access private
@function _alpha-color-theme-token-module($query) {
  @if tools.is-type($query, 'map', $errors: false) {
    @return (
      200: rgba(tokens.primitive-token-switch('#{map.get($query, 400)}.200', map.get($query, 400)), 8%),
      300: rgba(tokens.primitive-token-switch('#{map.get($query, 400)}.300', map.get($query, 400)), 12%),
      400: rgba(tokens.primitive-token-switch('#{map.get($query, 400)}.400', map.get($query, 400)), 20%),
      600: rgba(tokens.primitive-token-switch('#{map.get($query, 400)}.600', map.get($query, 400)), 33%),
      800: rgba(tokens.primitive-token-switch('#{map.get($query, 400)}.800', map.get($query, 400)), 42%),
    );
  }

  @return (
    200: rgba(tokens.primitive-token-get('#{$query}.400'), 8%),
    300: rgba(tokens.primitive-token-get('#{$query}.400'), 12%),
    400: rgba(tokens.primitive-token-get('#{$query}.400'), 20%),
    600: rgba(tokens.primitive-token-get('#{$query}.400'), 33%),
    800: rgba(tokens.primitive-token-get('#{$query}.400'), 42%)
  )
}

/// @access private
@function _shape-theme-token-module($query) {
  $result: ();
  @each $key, $value in $query {
    $result: map.set($result, $key, tokens.primitive-token-switch($value));
  }
  @return $result;
}

/// @access private
@function _typography-theme-token-module($query, $property) {
  @return (
    'global': tokens.primitive-token-switch(map.get(map.get($query, 'global'), $property)),
    'supertitle': tokens.primitive-token-switch(map.get(map.get($query, 'supertitle'), $property)),
    'title': tokens.primitive-token-switch(map.get(map.get($query, 'title'), $property)),
    'subtitle': tokens.primitive-token-switch(map.get(map.get($query, 'subtitle'), $property)),
    'body': tokens.primitive-token-switch(map.get(map.get($query, 'body'), $property)),
    'mono': tokens.primitive-token-switch(map.get(map.get($query, 'mono'), $property)),
    'small': tokens.primitive-token-switch(map.get(map.get($query, 'small'), $property)),
  );
}