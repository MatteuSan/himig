//---------------------------------------------------
//  Copyright (c) 2024 MatteuSan
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
//---------------------------------------------------

@use 'sass:list';

/// Valid component props
/// @access private
$_valid-props: ('fill', 'ink', 'border');
$_valid-colors: (
  inherit,
  currentColor,
  transparent,
  rgba(0, 0, 0, 0),
  rgba(0 0 0 / 0)
);

/// Validates a set of color props.
/// @param {map} $props
/// @access protected
@mixin validate-color-props($props) {
  @each $prop in $props {
    @if _is-color-prop($prop) { }
  }
  @content;
}

/// Validates a color query.
/// @access private
@function _is-valid-color($color) {
  //
}

/// Validates a color prop.
/// @access private
@function _is-color-prop($query) {
  @if not list.index($_valid-props, $query) {
    @error 'Invalid color prop: #{$query}. Expecting a valid color prop: #{$_valid-props}.';
  }
  @return true;
}